generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Domain {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String   @unique @db.VarChar(255)
  templateId Int      @unique
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
}

model Template {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  background      String?  @db.VarChar(255)
  birdeye         String?  @db.VarChar(255)
  coinGecko       String?  @db.VarChar(255)
  coinMarketCap   String?  @db.VarChar(255)
  contractAddress String?  @db.VarChar(255)
  description     String?  @db.VarChar(255)
  dexscreener     String?  @db.VarChar(255)
  dextools        String?  @db.VarChar(255)
  imagePreview    String?  @db.VarChar(255)
  instagram       String?  @db.VarChar(255)
  jupiter         Boolean  @default(false)
  logo            String?  @db.VarChar(255)
  projectName     String   @unique @db.VarChar(255)
  pumpFun         String?  @db.VarChar(255)
  telegram        String?  @db.VarChar(255)
  ticker          String?  @db.VarChar(255)
  tiktok          String?  @db.VarChar(255)
  twitter         String?  @db.VarChar(255)
  userId          Int?
  whitepaper      String?  @db.VarChar(255)
  domain          Domain?
  user            User?    @relation(fields: [userId], references: [id])
}

model User {
  id            Int        @id @default(autoincrement())
  address       String     @unique
  chainId       Int?
  lastConnected DateTime   @default(now())
  templates     Template[]
}
